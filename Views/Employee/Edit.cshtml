@model Employee

@{
    ViewData["Title"] = "Edit Employee";
}

<h2>Edit Employee</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<form asp-action="Edit" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <input asp-for="Id" type="hidden" />

    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Gender" class="control-label"></label>
        <select asp-for="Gender" class="form-control">
            <option value="">Select Gender</option>
            <option value="Male">Male</option>
            <option value="Female">Female</option>
        </select>
        <span asp-validation-for="Gender" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Company" class="control-label"></label>
        <input asp-for="Company" class="form-control" />
        <span asp-validation-for="Company" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Department" class="control-label"></label>
        <input asp-for="Department" class="form-control" />
        <span asp-validation-for="Department" class="text-danger"></span>
    </div>

    <!-- Children Section -->
    <div class="card mt-3">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h4>Children Information</h4>
            <button type="button" class="btn btn-success btn-sm" onclick="addNewChild()">
                <i class="fas fa-plus"></i> Add Child
            </button>
        </div>
        <div class="card-body" id="childrenContainer">
            @if (Model.Children != null && Model.Children.Count > 0)
            {
                for (int i = 0; i < Model.Children.Count; i++)
                {
                    <div class="border p-3 mb-3 child-item" data-index="@i">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <h5>Child @(i + 1)</h5>
                            <button type="button" class="btn btn-danger btn-sm" onclick="removeChild(@i)">
                                <i class="fas fa-trash"></i> Remove
                            </button>
                        </div>

                        <input asp-for="Children[i].Id" type="hidden" />
                        <input asp-for="Children[i].EmployeeId" type="hidden" />

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Children[i].Name" class="control-label">Name</label>
                                    <input asp-for="Children[i].Name" class="form-control" />
                                    <span asp-validation-for="Children[i].Name" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Children[i].Gender" class="control-label">Gender</label>
                                    <select asp-for="Children[i].Gender" class="form-control">
                                        <option value="">Select Gender</option>
                                        <option value="Male">Male</option>
                                        <option value="Female">Female</option>
                                    </select>
                                    <span asp-validation-for="Children[i].Gender" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="Children[i].Age" class="control-label">Age</label>
                                    <input asp-for="Children[i].Age" class="form-control" type="number" />
                                    <span asp-validation-for="Children[i].Age" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="Children[i].School" class="control-label">School</label>
                                    <input asp-for="Children[i].School" class="form-control" />
                                    <span asp-validation-for="Children[i].School" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="Children[i].Grade" class="control-label">Grade</label>
                                    <input asp-for="Children[i].Grade" class="form-control" />
                                    <span asp-validation-for="Children[i].Grade" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p id="noChildrenMessage">No children found for this employee.</p>
            }
        </div>
    </div>

    <div class="form-group mt-3">
        <input type="submit" value="Save Changes" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        let childIndex = @(Model.Children?.Count ?? 0);

        function addNewChild() {
            // No children message'ni yashirish
            const noChildrenMsg = document.getElementById('noChildrenMessage');
            if (noChildrenMsg) {
                noChildrenMsg.style.display = 'none';
            }

            const container = document.getElementById('childrenContainer');
            const newChildHtml = `
                <div class="border p-3 mb-3 child-item" data-index="${childIndex}">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <h5>Child ${childIndex + 1}</h5>
                        <button type="button" class="btn btn-danger btn-sm" onclick="removeChild(${childIndex})">
                            <i class="fas fa-trash"></i> Remove
                        </button>
                    </div>

                    <input name="Children[${childIndex}].Id" type="hidden" value="0" />
                    <input name="Children[${childIndex}].EmployeeId" type="hidden" value="@Model.Id" />

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="control-label">Name</label>
                                <input name="Children[${childIndex}].Name" class="form-control" />
                                <span class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="control-label">Gender</label>
                                <select name="Children[${childIndex}].Gender" class="form-control">
                                    <option value="">Select Gender</option>
                                    <option value="Male">Male</option>
                                    <option value="Female">Female</option>
                                </select>
                                <span class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="control-label">Age</label>
                                <input name="Children[${childIndex}].Age" class="form-control" type="number" value="0" />
                                <span class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="control-label">School</label>
                                <input name="Children[${childIndex}].School" class="form-control" />
                                <span class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="control-label">Grade</label>
                                <input name="Children[${childIndex}].Grade" class="form-control" />
                                <span class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
            `;

            container.insertAdjacentHTML('beforeend', newChildHtml);
            childIndex++;
            updateChildNumbers();
        }

        function removeChild(index) {
            const childElement = document.querySelector(`[data-index="${index}"]`);
            if (childElement) {
                childElement.remove();
                updateChildNumbers();

                // Agar hech qanday child qolmasa, message'ni ko'rsatish
                const remainingChildren = document.querySelectorAll('.child-item');
                if (remainingChildren.length === 0) {
                    const noChildrenMsg = document.getElementById('noChildrenMessage');
                    if (noChildrenMsg) {
                        noChildrenMsg.style.display = 'block';
                    }
                }
            }
        }

        function updateChildNumbers() {
            const childItems = document.querySelectorAll('.child-item');
            childItems.forEach((item, index) => {
                const title = item.querySelector('h5');
                if (title) {
                    title.textContent = `Child ${index + 1}`;
                }

                // Input name'larini yangilash
                const inputs = item.querySelectorAll('input[name*="Children"], select[name*="Children"]');
                inputs.forEach(input => {
                    const name = input.getAttribute('name');
                    if (name) {
                        const newName = name.replace(/Children\[\d+\]/, `Children[${index}]`);
                        input.setAttribute('name', newName);
                    }
                });

                // Data-index'ni yangilash
                item.setAttribute('data-index', index);

                // Remove button'ni yangilash
                const removeBtn = item.querySelector('button[onclick*="removeChild"]');
                if (removeBtn) {
                    removeBtn.setAttribute('onclick', `removeChild(${index})`);
                }
            });
        }
    </script>
}