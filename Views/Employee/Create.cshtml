@model CRUDDEMO1.Models.Employee
@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create</h1>
<h3>Employee Entry</h3>
<hr />

<div class="row">
    <div class="col-md-12">
        <form asp-action="Create" id="employeeForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- Employee Information -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5>Employee Information</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="Name" class="control-label"></label>
                                <input asp-for="Name" class="form-control" required />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="Gender" class="control-label">Gender <span class="text-danger">*</span></label>
                                <select asp-for="Gender" class="form-control" required>
                                    <option value="">==Select Gender==</option>
                                    <option value="Male">Male</option>
                                    <option value="Female">Female</option>
                                </select>
                                <span asp-validation-for="Gender" class="text-danger"></span>
                                <div class="gender-error text-danger small mt-1" style="display: none;">
                                    Jinsni tanlash majburiy!
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="Company" class="control-label"></label>
                                <input asp-for="Company" class="form-control" required />
                                <span asp-validation-for="Company" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="Department" class="control-label"></label>
                                <input asp-for="Department" class="form-control" required />
                                <span asp-validation-for="Department" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Children Information -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5>Children Information</h5>
                </div>
                <div class="card-body">
                    <div class="form-group mb-3">
                        <label class="control-label">Do you have children?</label>
                        <div>
                            <input type="radio" id="hasChildrenYes" name="HasChildren" value="true" onclick="toggleChildrenSection(true)" />
                            <label for="hasChildrenYes">Yes</label>

                            <input type="radio" id="hasChildrenNo" name="HasChildren" value="false" onclick="toggleChildrenSection(false)" style="margin-left: 20px;" />
                            <label for="hasChildrenNo">No</label>
                        </div>
                    </div>

                    <div id="childrenSection" style="display: none;">
                        <div class="form-group mb-3">
                            <label for="childrenCount" class="control-label">Number of Children:</label>
                            <input type="number" id="childrenCount" min="1" max="10" class="form-control"
                                   style="width: 150px;" onchange="generateChildrenForms()"
                                   title="1 dan 10 gacha bola bo'lishi mumkin" />
                            <small class="text-muted">Maksimal 10 ta bola</small>
                        </div>

                        <div id="childrenForms"></div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <input type="submit" value="Create Employee" class="btn btn-success" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

<script>
    // Yosh validation funksiyasi
    function validateAge(input) {
        const value = parseInt(input.value);
        const min = parseInt(input.min);
        const max = parseInt(input.max);

        // Inputni tozalash
        input.classList.remove('is-valid', 'is-invalid');

        if (input.value === '') {
            return true; // Bo'sh qiymat uchun hech narsa qilmaymiz
        }

        if (isNaN(value) || value < min || value > max) {
            input.classList.add('is-invalid');

            // Xato xabarini ko'rsatish
            let errorDiv = input.parentNode.querySelector('.age-error');
            if (!errorDiv) {
                errorDiv = document.createElement('div');
                errorDiv.className = 'age-error text-danger small mt-1';
                input.parentNode.appendChild(errorDiv);
            }
            errorDiv.textContent = `Yosh ${min} dan ${max} gacha bo'lishi kerak!`;
            return false;

        } else {
            input.classList.add('is-valid');

            // Xato xabarini olib tashlash
            const errorDiv = input.parentNode.querySelector('.age-error');
            if (errorDiv) {
                errorDiv.remove();
            }
            return true;
        }
    }

    // Gender validation
    function validateGender() {
        const genderSelect = document.querySelector('select[asp-for="Gender"]');
        const errorDiv = document.querySelector('.gender-error');

        if (!genderSelect.value) {
            genderSelect.classList.add('is-invalid');
            errorDiv.style.display = 'block';
            return false;
        } else {
            genderSelect.classList.remove('is-invalid');
            genderSelect.classList.add('is-valid');
            errorDiv.style.display = 'none';
            return true;
        }
    }

    // Gender select o'zgarishini kuzatish
    document.addEventListener('DOMContentLoaded', function() {
        const genderSelect = document.querySelector('select[asp-for="Gender"]');
        genderSelect.addEventListener('change', validateGender);
    });

    function toggleChildrenSection(hasChildren) {
        const section = document.getElementById('childrenSection');
        if (hasChildren) {
            section.style.display = 'block';
        } else {
            section.style.display = 'none';
            document.getElementById('childrenForms').innerHTML = '';
            document.getElementById('childrenCount').value = '';
        }
    }

    function generateChildrenForms() {
        const count = parseInt(document.getElementById('childrenCount').value);
        const container = document.getElementById('childrenForms');
        container.innerHTML = '';

        if (count > 0 && count <= 10) {
            for (let i = 0; i < count; i++) {
                const childForm = `
                    <div class="card mt-3">
                        <div class="card-header">
                            <h6>Child ${i + 1} Information</h6>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        <label class="control-label">Name <span class="text-danger">*</span></label>
                                        <input name="Children[${i}].Name" class="form-control" required
                                               placeholder="Bolaning ismini kiriting" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        <label class="control-label">Gender <span class="text-danger">*</span></label>
                                        <select name="Children[${i}].Gender" class="form-control child-gender" required>
                                            <option value="">==Select Gender==</option>
                                            <option value="Male">Male</option>
                                            <option value="Female">Female</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group mb-3">
                                        <label class="control-label">Age <span class="text-danger">*</span></label>
                                        <input name="Children[${i}].Age" type="number" min="0" max="50"
                                               class="form-control child-age" required
                                               placeholder="0-50" title="Yosh 0 dan 50 gacha bo'lishi kerak"
                                               oninput="validateAge(this)" />
                                        <small class="text-muted">0-50 yosh oralig'ida</small>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group mb-3">
                                        <label class="control-label">School</label>
                                        <input name="Children[${i}].School" class="form-control"
                                               placeholder="Maktab nomi (ixtiyoriy)" />
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group mb-3">
                                        <label class="control-label">Grade</label>
                                        <input name="Children[${i}].Grade" class="form-control"
                                               placeholder="Sinf (ixtiyoriy)" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                container.innerHTML += childForm;
            }
        } else if (count > 10) {
            alert('Maksimal 10 ta bola ma\'lumotini kiritishingiz mumkin!');
            document.getElementById('childrenCount').value = '';
        }
    }

    // Form submission validation
    document.getElementById('employeeForm').addEventListener('submit', function(e) {
        let isValid = true;
        let errorMessages = [];

        console.log('Form validation starting...');

        // Employee Gender validation
        if (!validateGender()) {
            isValid = false;
            errorMessages.push('Employee uchun jinsni tanlang!');
        }

        // Employee required fields validation
        const requiredFields = ['Name', 'Company', 'Department'];
        requiredFields.forEach(field => {
            const input = document.querySelector(`input[asp-for="${field}"]`);
            if (!input.value.trim()) {
                isValid = false;
                input.classList.add('is-invalid');
                errorMessages.push(`${field} maydoni to'ldirilishi shart!`);
            } else {
                input.classList.remove('is-invalid');
                input.classList.add('is-valid');
            }
        });

        // Children validation (agar bor bo'lsa)
        const hasChildrenYes = document.getElementById('hasChildrenYes').checked;
        if (hasChildrenYes) {
            const childrenCount = document.getElementById('childrenCount').value;

            if (!childrenCount || childrenCount < 1) {
                isValid = false;
                errorMessages.push('Bolalar sonini kiriting!');
            } else {
                // Har bir bolaning ma\'lumotlarini tekshirish
                const childNames = document.querySelectorAll('input[name*="Children"][name*="Name"]');
                const childGenders = document.querySelectorAll('select[name*="Children"][name*="Gender"]');
                const childAges = document.querySelectorAll('input[name*="Children"][name*="Age"]');

                // Bolalar nomi validation
                childNames.forEach((input, index) => {
                    if (!input.value.trim()) {
                        isValid = false;
                        input.classList.add('is-invalid');
                        errorMessages.push(`${index + 1}-bola nomi kiritilishi shart!`);
                    } else {
                        input.classList.remove('is-invalid');
                        input.classList.add('is-valid');
                    }
                });

                // Bolalar jinsi validation
                childGenders.forEach((select, index) => {
                    if (!select.value) {
                        isValid = false;
                        select.classList.add('is-invalid');
                        errorMessages.push(`${index + 1}-bola jinsi tanlanishi shart!`);
                    } else {
                        select.classList.remove('is-invalid');
                        select.classList.add('is-valid');
                    }
                });

                // Bolalar yoshi validation
                childAges.forEach((input, index) => {
                    if (!input.value || input.value === '') {
                        isValid = false;
                        input.classList.add('is-invalid');
                        errorMessages.push(`${index + 1}-bola yoshi kiritilishi shart!`);
                    } else if (!validateAge(input)) {
                        isValid = false;
                        errorMessages.push(`${index + 1}-bola yoshi 0 dan 50 gacha bo'lishi kerak!`);
                    }
                });
            }
        }

        if (!isValid) {
            e.preventDefault();

            // Xato xabarlarini ko'rsatish
            let alertMessage = 'Quyidagi xatolarni to\'g\'rilang:\\n\\n';
            errorMessages.forEach((msg, index) => {
                alertMessage += `${index + 1}. ${msg}\\n`;
            });

            alert(alertMessage);

            // Birinchi xato maydoniga scroll qilish
            const firstInvalidElement = document.querySelector('.is-invalid');
            if (firstInvalidElement) {
                firstInvalidElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
                firstInvalidElement.focus();
            }
        }

        return isValid;
    });
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}